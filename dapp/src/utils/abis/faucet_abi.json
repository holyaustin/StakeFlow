[
  {
    "name": "IFaucetImpl",
    "type": "impl",
    "interface_name": "stakeflow::faucet::IFaucet"
  },
  {
    "name": "core::bool",
    "type": "enum",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "name": "stakeflow::faucet::IFaucet",
    "type": "interface",
    "items": [
      {
        "name": "request_bwc_token",
        "type": "function",
        "inputs": [
          {
            "name": "receiver_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "external"
      },
      {
        "name": "request_receipt_token",
        "type": "function",
        "inputs": [
          {
            "name": "receiver_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "external"
      },
      {
        "name": "request_reward_token",
        "type": "function",
        "inputs": [
          {
            "name": "receiver_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "constructor",
    "type": "constructor",
    "inputs": [
      {
        "name": "bwcerc20_token_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "receipt_token_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "reward_token_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "stakeflow::faucet::Faucet::Event",
    "type": "event",
    "variants": []
  }
]